"""Initial migration

Revision ID: 651efce107b7
Revises:
Create Date: 2024-11-04 10:22:52.846674

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import sqlmodel
from geoalchemy2 import Geometry

# revision identifiers, used by Alembic.
revision: str = "651efce107b7"
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.execute("CREATE EXTENSION IF NOT EXISTS postgis;")
    op.execute("CREATE EXTENSION IF NOT EXISTS unaccent;")

    op.execute(
        """
        INSERT INTO "public"."spatial_ref_sys"("srid","auth_name","auth_srid","srtext","proj4text") VALUES (998999,E'local',998999,E'ENGCRS["Local coordinate system in millimeters",\n    EDATUM["Local Datum"],\n    CS[Cartesian,2],\n        AXIS["x",east,\n            ORDER[1],\n            LENGTHUNIT["millimetre",0.001]],\n        AXIS["y",north,\n            ORDER[2],\n            LENGTHUNIT["millimetre",0.001]]]',E'') ON CONFLICT DO NOTHING;
        """
    )
    op.create_geospatial_table(
        "devices",
        sa.Column("mac_address", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column(
            "geom",
            Geometry(
                geometry_type="POINT", srid=998999, spatial_index=False, from_text="ST_GeomFromEWKT", name="geometry"
            ),
            nullable=True,
        ),
        sa.Column("last_seen", sa.DateTime(), nullable=True),
        sa.PrimaryKeyConstraint("mac_address"),
    )
    op.create_geospatial_index(
        "idx_devices_geom", "devices", ["geom"], unique=False, postgresql_using="gist", postgresql_ops={}
    )
    op.create_table(
        "measurements",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("device_id", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("happened_at", sa.DateTime(), nullable=False),
        sa.Column("additional_data", sa.JSON(), nullable=True),
        sa.ForeignKeyConstraint(
            ["device_id"],
            ["devices.mac_address"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("measurements")
    op.drop_geospatial_index("idx_devices_geom", table_name="devices", postgresql_using="gist", column_name="geom")
    op.drop_geospatial_table("devices")
    # ### end Alembic commands ###
